%YAML:1.0

#common parameters
# imu_topic: "/imu_data"
# image_topic: "/cam00/image_raw"
# imu_topic: "/imu_raw"
# image_topic: "/kitti/camera_gray_left/image_raw"
imu_topic: "/kitti/oxts/imu"
image_topic: "/kitti/camera_gray_left/image_raw"
output_path: "/home/lxq/catkin_output/"

#camera calibration 
# model_type: PINHOLE #针孔相机  pinhole
model_type: PINHOLE
camera_name: camera
# image_width: 1241
# image_height: 376
image_width: 1226
image_height: 370
#  D_00: -3.792567e-01 2.121203e-01 9.182571e-04 1.911304e-03 -7.605535e-02
distortion_parameters:
   k1: 0
   k2: 0
   p1: 0
   p2: 0
#  9.786977e+02 0.000000e+00 6.900000e+02 0.000000e+00 9.717435e+02 2.497222e+02 0.000000e+00 0.000000e+00 1.000000e+00
projection_parameters:
   fx: 7.070912000000e+02
   fy: 7.070912000000e+02
   cx: 6.018873000000e+02
   cy: 1.831104000000e+02


# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
# T_IMU_CAM = 
#   0.00499006    -0.999987 -0.000724718    -0.815191
#   -0.0170827  0.000639377    -0.999854     0.249689
#     0.999842   0.00500172   -0.0170793     -1.13444
#            0            0            0            1
# T_cam_imu = 
#   0.00499006   -0.0170827     0.999842       1.1426
#    -0.999987  0.000639377   0.00500172    -0.809666
# -0.000724718    -0.999854   -0.0170793     0.229686
#            0            0            0            1
#Rotation from camera frame to imu frame, imu^R_cam || T_cam_imu
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 0.00499006,   -0.0170827 ,    0.999842,
           -0.999987,  0.000639377,   0.00500172,
           -0.000724718,    -0.999854,   -0.0170793]
# data: [ 0.00499006,    -0.999987, -0.000724718,
#            -0.0170827,  0.000639377,    -0.999854,
#            0.999842,   0.00500172,   -0.0170793]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [1.1426, -0.809666, 0.229686]
# data: [-0.815191, 0.249689, -1.13444]

#feature traker paprameters
max_cnt: 200            # max feature number in feature tracking || 150 200
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.08  # max solver itration time (ms), to guarantee real time || 0.04 0.08
max_num_iterations: 10   # max solver itrations, to guarantee real time || 8 10
keyframe_parallax: 15 # keyframe selection threshold (pixel) || 10.0 15

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.001         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 1.0e-4       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude

#loop closure parameters
loop_closure: 1                 # start loop closure
load_previous_pose_graph: 0     # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0          # useful in real-time and large project
pose_graph_save_path: "/home/lxq/catkin_output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ